import{_ as t,o as a,c as s,R as o}from"./chunks/framework.lPQqlWxT.js";const e="/assets/父元素的高度，都是由内部未浮动子元素的高度撑起来的.q_LEA0Gd.png",c="/assets/高度坍塌的效果.5D6p5nOe.png",l="/assets/高度坍塌的效果2.gGst_Ocy.png",i="/assets/clearboth空元素.H1zY-59R.png",r="/assets/设置父元素浮动.n4_SyM0s.png",p="/assets/为父元素末尾伪元素设置clearboth.A6GEq-8o.png",S=JSON.parse('{"title":"防止父元素高度坍塌","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"Caster/CSS/防止父元素高度坍塌/index.md","filePath":"Caster/CSS/防止父元素高度坍塌/index.md"}'),n={name:"Caster/CSS/防止父元素高度坍塌/index.md"},d=o('<h1 id="防止父元素高度坍塌" tabindex="-1">防止父元素高度坍塌 <a class="header-anchor" href="#防止父元素高度坍塌" aria-label="Permalink to &quot;防止父元素高度坍塌&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">原理</p><p>父元素的高度，都是由内部未浮动子元素的高度撑起来的</p></div><p><img src="'+e+'" alt="父元素的高度，都是由内部未浮动子元素的高度撑起来的"></p><p>子元素浮动，会对父元素造成影响 如果子元素浮动起来，就不占普通文档流的位置。父元素高度就会失去支撑，也称为高度坍塌</p><p><img src="'+c+'" alt="高度坍塌的效果"></p><p>父元素高度坍塌的后果 父元素的样式出不来或footer页脚被挡住</p><p>即使有部分元素留在普通文档流布局中支撑着父元素，如果浮动起来的元素高度高于留下来的元素 那么浮动元素的高度会超出父元素边框，用户体验同样不好</p><p><img src="'+l+'" alt="高度坍塌的效果2"></p><h2 id="方案一-为父元素设置-overflow-hidden-属性" tabindex="-1">方案一：为父元素设置 overflow:hidden 属性 <a class="header-anchor" href="#方案一-为父元素设置-overflow-hidden-属性" aria-label="Permalink to &quot;方案一：为父元素设置 overflow:hidden 属性&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">原理</p><p>CSS中的overflow：hidden属性会强制要求父元素必须包裹住所有内部浮动的元素，以及所有元素的margin范围</p></div><div class="info custom-block"><p class="custom-block-title">缺点</p><p>如果刚好父元素有些超范围的子元素内容需要显示（比如，个别position定位的子菜单项），不想隐藏，就会发生冲突</p></div><h2 id="方案二-在父元素内的结尾追加一个空的子元素-块级元素-并设置空子元素清除浮动影响-clear-both" tabindex="-1">方案二：在父元素内的结尾追加一个空的子元素（块级元素），并设置空子元素清除浮动影响（clear:both） <a class="header-anchor" href="#方案二-在父元素内的结尾追加一个空的子元素-块级元素-并设置空子元素清除浮动影响-clear-both" aria-label="Permalink to &quot;方案二：在父元素内的结尾追加一个空的子元素（块级元素），并设置空子元素清除浮动影响（clear:both）&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">原理</p><p>利用 clear:both 属性和父元素必须包含非浮动的元素两个原理</p></div><div class="info custom-block"><p class="custom-block-title">缺点</p><p>无端多出一个无意义的，看不到的空元素，影响选择器和查找元素</p></div><p><img src="'+i+'" alt="clearboth空元素"></p><h2 id="方案三-设置父元素也浮动" tabindex="-1">方案三：设置父元素也浮动 <a class="header-anchor" href="#方案三-设置父元素也浮动" aria-label="Permalink to &quot;方案三：设置父元素也浮动&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">原理</p><p>浮动属性会强制父元素扩大到包含所有浮动的内部元素</p></div><div class="info custom-block"><p class="custom-block-title">缺点</p><p>会产生新的浮动影响。比如，父元素浮动，导致父元素之后平级的页脚div上移，被父元素挡住了 可以通过设置父元素之后的平级元素清除浮动来解决（clear:both）</p></div><p><img src="'+r+'" alt="设置父元素浮动"></p><h2 id="方案四-为父元素末尾伪元素设置clear-both" tabindex="-1">方案四：为父元素末尾伪元素设置clear:both <a class="header-anchor" href="#方案四-为父元素末尾伪元素设置clear-both" aria-label="Permalink to &quot;方案四：为父元素末尾伪元素设置clear:both&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">完美解决</p><p>既不会影响显示隐藏，又不会影响查找元素，又不会产生新的浮动问题</p></div><div class="info custom-block"><p class="custom-block-title">注意</p><p>设置 display:table; 可能会有默认高度，所以增加height:0</p></div><p><img src="'+p+'" alt="为父元素末尾伪元素设置clear:both"></p>',23),h=[d];function m(b,_,u,v,k,f){return a(),s("div",null,h)}const q=t(n,[["render",m]]);export{S as __pageData,q as default};
