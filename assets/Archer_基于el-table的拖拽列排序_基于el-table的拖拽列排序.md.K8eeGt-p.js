import{_ as e,o as a,c as t,R as l}from"./chunks/framework.lPQqlWxT.js";const m=JSON.parse('{"title":"基于el-table的拖拽列排序","description":"","frontmatter":{},"headers":[],"relativePath":"Archer/基于el-table的拖拽列排序/基于el-table的拖拽列排序.md","filePath":"Archer/基于el-table的拖拽列排序/基于el-table的拖拽列排序.md"}'),r={name:"Archer/基于el-table的拖拽列排序/基于el-table的拖拽列排序.md"},o=l('<h1 id="基于el-table的拖拽列排序" tabindex="-1">基于el-table的拖拽列排序 <a class="header-anchor" href="#基于el-table的拖拽列排序" aria-label="Permalink to &quot;基于el-table的拖拽列排序&quot;">​</a></h1><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://blog.wy310.cn/2021/08/26/table-component-with-adjustable-column-order/" target="_blank" rel="noreferrer">基于el-table的拖拽列排序与数据持久化</a></p>',3),_=[o];function n(c,s,h,i,b,d){return a(),t("div",null,_)}const f=e(r,[["render",n]]);export{m as __pageData,f as default};
